version: '3.8'

services:
  # Service d'application (frontend + backend)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - mongodb
      - redis
    environment:
      - NODE_ENV=production
      - PORT=3000
      - PGHOST=postgres
      - PGUSER=postgres
      - PGDATABASE=ehpad_connect
      - PGPASSWORD=postgres
      - PGPORT=5432
      - MONGO_URI=mongodb://mongodb:27017/ehpad_connect
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - app-network
    volumes:
      - app-logs:/app/logs

  # Base de données PostgreSQL
  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ehpad_connect
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  # Base de données MongoDB pour les métadonnées documentaires
  mongodb:
    image: mongo:5
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=ehpad_connect
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network

  # Redis pour la mise en cache et les sessions
  redis:
    image: redis:6-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  # MinIO pour le stockage des fichiers (compatible S3)
  minio:
    image: minio/minio
    restart: always
    environment:
      - MINIO_ROOT_USER=miniouser
      - MINIO_ROOT_PASSWORD=miniopassword
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-network

  # Nginx pour le proxy et servir le frontend en production
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - app-network

# Définition des volumes pour persister les données
volumes:
  postgres-data:
  mongodb-data:
  redis-data:
  minio-data:
  app-logs:

# Réseau interne pour les services
networks:
  app-network:
    driver: bridge
